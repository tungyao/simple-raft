syntax = "proto3";
package pb;
option go_package = "/pb";
// 负责处理各种rpc请求
//+ build
// protoc --go_out=. --go-grpc_out=. pb/vote.proto

// 选举请求
service Vote {
  rpc VoteRequest(VoteRequestData) returns (VoteReplyData){}
  rpc MasterNotice(VoteMasterRequest) returns (VoteMasterReply) {}
}
message VoteMasterRequest {
  string id = 1;
}
message VoteMasterReply {
  string id = 1;
}
message VoteRequestData {
  uint64  term_index = 1; // 本机的任期号
  uint64  log_index = 2;  // 本机的最高日志编号
}
message VoteReplyData{
  uint32 get = 1;
}

// 与master节点建立连接后 请求资料
service Entry {
  rpc ClientInit(EntryClientInitDataRequest) returns (EntryClientInitDataReply){}
}
message EntryClientInitDataRequest {
  repeated SelfNode selfNode = 1; // 本机携带的节点
  string selfId = 2;
}
message EntryClientInitDataReply {
  repeated SelfNode selfNode = 1; // 本机携带的节点
  string masterId = 2;
  bool increment = 3; // 是否是增量节点
}
message SelfNode {
  string id = 1;
  string tcpAddr = 2;
  string rpcAddr = 3;
}